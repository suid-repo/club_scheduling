@model IEnumerable<WebApplication.Models.ApplicationUser>
@using WebApplication.Extentions;

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BirthDay)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>            
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BirthDay)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>          
            <td>
                @if (item.IsFakeAccount == true)
                {
                    @Html.ActionLink(I18N.GenericAction.edit, "Edit", "Users", new { id = item.Id }, new { @class = "btn btn-primary btn-sm" })
                }
                @if (User.IsInRole("Head Coach"))
                {
                    @Html.ActionLink(I18N.GenericAction.details, "Details", "Users", new { id = item.Id }, new { @class = "btn btn-primary btn-sm", target = "_blank" })
                }
                @if ((User.Identity.IsFamilyOwner() || User.IsInRole("Head Coach")) && item.Id != item.Family.OwnerId)
                {
                    @Html.ActionLink(I18N.GenericAction.remove, "RemoveMember", new { id = item.Id }, new { @class = "btn btn-primary btn-sm" })
                }
            </td>
        </tr>
    }

</table>
