@model WebApplication.Models.EventCreateViewModel
@{
    ViewBag.Title = I18N.View.Event.Create_Title;
}
<div class="post-single">
    <div class="post-details">
        <div class="row">
            <div class="pull-left"><h1>@ViewBag.Title</h1></div>
        </div>
        <div class="post-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="form-group">
                    @Html.LabelFor(model => model.Event.Name)
                    @Html.TextBoxFor(model => model.Event.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Event.Name, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Event.Description)
                    @Html.TextAreaFor(model => model.Event.Description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Event.Description, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Event.StartDate, htmlAttributes: new { asp_format = "{0:dd/MM/yyyy}" })
                    @Html.EditorFor(model => model.Event.StartDate, "DateTimeWithPicker", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Event.StartDate, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Event.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Event.EndDate, "DateTimeWithPicker", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Event.EndDate, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SelectedLevels, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.ListBoxFor(model => model.SelectedLevels, new SelectList(Model.Levels, "Id", "Name"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SelectedLevels, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="@I18N.GenericAction.create" class="btn btn-primary" />
                    </div>
                </div>
            }
            <div>
                @Html.ActionLink(I18N.GenericAction.back2list, "Index")
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
