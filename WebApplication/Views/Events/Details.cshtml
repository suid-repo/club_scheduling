@using Microsoft.AspNet.Identity;
@model WebApplication.Models.EventDetailsViewModel

@{
    ViewBag.Title = I18N.Core.Event.Event_Details_Title;
}

<h2>@I18N.Core.Event.Event_Details_Title</h2>

<div>
    <h4>Event - @Model.Event.RegisterUsers.Count/@(Model.Event.CoachEvents.Count*8)</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Event.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.StartDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.StartDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.EndDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.EndDate)
        </dd>

    </dl>
</div>
<div class="row">
    @if (User.IsInRole("Coach"))
    {
        if (!Model.Event.CoachEvents.Any(ce => ce.UserId.Equals(User.Identity.GetUserId()))) //Subscribe as a coach
        {
            <div class="col-xs-12 col-md-3 mb-1">
                @Html.ActionLink(I18N.Core.Event.Event_Action_JoinCoach, "CoachJoin", new { id = Model.Event.Id }, new { @class = "btn btn-success btn-block" })
            </div>
        }
        else //Unsubscribe button
        {
            <div class="col-xs-12 col-md-3 mb-1">
                @Html.ActionLink(I18N.Core.Event.Event_Action_LeaveCoach, "CoachLeave", new { id = Model.Event.Id }, new { @class = "btn btn-secondary     btn-block" })
            </div>
        }
    }
    else
    {
        if (!(Model.Event.RegisterUsers.Any(ru => ru.Id.Equals(User.Identity.GetUserId())) || Model.Event.Queued.QueuedItems.Any(q => q.UserId.Equals(User.Identity.GetUserId()))))
        {
            if (Model.User.Family == null) // NO FAMILY OR FAMILY MEMBERS
            {
                <div class="col-xs-12 col-md-3 mb-1">
                    @Html.ActionLink(I18N.Core.Event.Event_Action_JoinMember, "MemberJoin", new { id = Model.Event.Id }, new { @class = "btn btn-success btn-block" })
                </div>
            }
            else
            {
                @*<div class="col-xs-12 col-md-3 mb-1">
                        @Html.ActionLink(I18N.Core.Event.Event_Action_JoinMember, "MemberFamillyJoin", new { id = Model.Event.Id }, new { @class = "btn btn-success btn-block" })
                    </div>*@
            }
        }
        else
        {
            <div class="col-xs-12 col-md-3 mb-1">
                @Html.ActionLink(I18N.Core.Event.Event_Action_LeaveMember, "MemberLeave", new { id = Model.Event.Id }, new { @class = "btn btn-danger btn-block" })
            </div>
        }
    }
    @if (User.IsInRole("Head Coach"))
    {
        @*<div class="col-xs-12 col-md-3  mb-1">

                @Html.ActionLink(I18N.Core.GenericAction.edit, "Edit", new { id = Model.Event.Id }, new { @class = "btn btn-primary btn-block" })

            </div>*@
        <div class="col-xs-12 col-md-3  mb-1">

            @Html.ActionLink(I18N.Core.GenericAction.cancel, "Delete", new { id = Model.Event.Id }, new { @class = "btn btn-danger btn-block" })

        </div>
    }

</div>

<p>
    @Html.ActionLink(I18N.Core.GenericAction.back2list, "Index")
</p>
